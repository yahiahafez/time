{
  "_args": [
    [
      {
        "raw": "angular-stripe",
        "scope": null,
        "escapedName": "angular-stripe",
        "name": "angular-stripe",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/sara/Pictures/sprint 3"
    ]
  ],
  "_from": "angular-stripe@latest",
  "_id": "angular-stripe@4.2.13",
  "_inCache": true,
  "_location": "/angular-stripe",
  "_nodeVersion": "6.8.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/angular-stripe-4.2.13.tgz_1491828573828_0.20257613505236804"
  },
  "_npmUser": {
    "name": "bendrucker",
    "email": "bvdrucker@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-stripe",
    "scope": null,
    "escapedName": "angular-stripe",
    "name": "angular-stripe",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-stripe/-/angular-stripe-4.2.13.tgz",
  "_shasum": "7bc957cd7409f556dc2e5531ea5776503fce8dc6",
  "_shrinkwrap": null,
  "_spec": "angular-stripe",
  "_where": "/home/sara/Pictures/sprint 3",
  "author": {
    "name": "Ben Drucker",
    "email": "bvdrucker@gmail.com",
    "url": "http://www.bendrucker.me"
  },
  "bugs": {
    "url": "https://github.com/bendrucker/angular-stripe/issues"
  },
  "dependencies": {
    "angular-assert-q-constructor": "~1.0.1",
    "stripe-as-promised": "~2.0.0"
  },
  "description": "Angular service provider for interacting with Stripe",
  "devDependencies": {
    "angular": "~1.4.9",
    "angular-mocks": "~1.4.9",
    "browserify": "~13.0.0",
    "chai": "~3.5.0",
    "derequire": "~2.0.0",
    "exposify": "~0.5.0",
    "phantomjs": "~2.1.3",
    "sinon": "~1.17.3",
    "sinon-chai": "~2.8.0",
    "standard": "~5.4.1",
    "stripe-debug": "~2.0.0",
    "zuul": "~3.9.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7bc957cd7409f556dc2e5531ea5776503fce8dc6",
    "tarball": "https://registry.npmjs.org/angular-stripe/-/angular-stripe-4.2.13.tgz"
  },
  "files": [
    "src/*.js",
    "readme.md"
  ],
  "gitHead": "6092688f142d8dc74c7e9861f5024d0762857736",
  "homepage": "https://github.com/bendrucker/angular-stripe",
  "keywords": [
    "angular",
    "stripe",
    "promise",
    "wrapper"
  ],
  "license": "MIT",
  "main": "./src",
  "maintainers": [
    {
      "name": "bendrucker",
      "email": "bvdrucker@gmail.com"
    }
  ],
  "name": "angular-stripe",
  "optionalDependencies": {},
  "peerDependencies": {
    "angular": "^1.3"
  },
  "readme": "angular-stripe [![Build Status](https://travis-ci.org/bendrucker/angular-stripe.svg?branch=master)](https://travis-ci.org/bendrucker/angular-stripe)\n==============\n\nAngular provider for easy interaction with [Stripe.js](https://stripe.com/docs/stripe.js). angular-stripe wraps Stripe.js's async operations in `$q` promises, making response handling easier and eliminating `$scope.$apply` calls and other repetitive boilerplate in your application. Check out [angular-credit-cards](https://github.com/bendrucker/angular-credit-cards) for validating your credit card forms. angular-stripe is powered by [stripe-as-promised](https://github.com/bendrucker/stripe-as-promised).\n\n## Installing\n```bash\n$ npm install --save angular-stripe\n```\n\n## Usage\n\nangular-stripe expects Stripe.js to be available as `window.Stripe` when it loads.\n\n```js\n// node module exports the string 'angular-stripe' for convenience\nangular.module('myApp', [\n  require('angular-stripe')\n]);\n// otherwise, include the code first then the module name\nangular.module('myApp', [\n  'angular-stripe'\n]);\n```\n\n## API\n\n### `stripeProvider`\n\nangular-stripe exposes `stripeProvider` for configuring Stripe.js.\n\n##### `stripeProvider.setPublishableKey(key)` -> `undefined`\n\nSets your Stripe [publishable key](https://stripe.com/docs/stripe.js#setting-publishable-key). \n\n```js\nangular\n  .module('myApp', [\n    'angular-stripe'\n  ])\n  .config(function (stripeProvider) {\n    stripeProvider.setPublishableKey('my_key');\n  });\n```\n\n<hr>\n\n### `stripe`\n\nInject `stripe` into your services or controllers to access the API methods. `createToken` returns a `$q` promise. If Stripe responds with an error, the promise will be rejected. \n\n---\n\n##### `stripe.setPublishableKey(key)` -> `undefined`\n\nSame as [`stripeProvider.setPublishableKey`](#stripeprovidersetpublishablekeykey---undefined)\n\n---\n\n### `stripe.card`\n\n##### `stripe.card.createToken(card [, params])` -> `promise`\n \nTokenizes a card using [`Stripe.card.createToken`](https://stripe.com/docs/stripe.js#card-createToken). You can optionally pass a `key` property under `params` to use a different publishable key than the default to create that token. This is especially useful for applications using [Stripe Connect](https://stripe.com/connect).\n\nThe following utility methods are also exposed:\n\n* [`validateCardNumber`](https://stripe.com/docs/stripe.js#card-validateCardNumber)\n* [`validateExpiry`](https://stripe.com/docs/stripe.js#card-validateExpiry)\n* [`validateCVC`](https://stripe.com/docs/stripe.js#card-validateCVC)\n* [`cardType`](https://stripe.com/docs/stripe.js#card-cardType)\n\n---\n\n#### `stripe.bankAccount`\n \n##### `stripe.bankAccount.createToken(bankAccount [, params])` -> `promise`\n\nTokenizes a card using [`Stripe.bankAccount.createToken`](https://stripe.com/docs/stripe.js#bank-account-createToken).\n\nThe following utility methods are also exposed:\n\n* [`validateRoutingNumber`](https://stripe.com/docs/stripe.js#bank-account-validateRoutingNumber)\n* [`validateAccountNumber`](https://stripe.com/docs/stripe.js#bank-account-validateAccountNumber)\n\n---\n\n#### `stripe.bitcoinReceiver`\n\n##### `stripe.bitcoinReceiver.createReceiver` -> `promise`\n\nCreates a bitcoin receiver using [`Stripe.bitcoinReceiver.createReceiver`](https://stripe.com/docs/stripe.js#bitcoinreceiver-createreceiver).\n\n##### `stripe.bitcoinReceiver.pollReceiver` -> `promise`\n\nPolls a bitcoin receiver using [`Stripe.bitcoinReceiver.pollReceiver`](https://stripe.com/docs/stripe.js#bitcoinreceiver-pollreceiver). Note that you'll need to implement [additional logic if you need to cancel receivers](https://github.com/bendrucker/stripe-as-promised#bitcoin).\n\nThe following utility methods are also exposed:\n\n* [`cancelReceiverPoll`](https://stripe.com/docs/stripe.js#bitcoinreceiver-cancelreceiverpoll)\n\n---\n\n## Examples\n\n#### Charging a card\n\n```js\napp.controller('PaymentController', function ($scope, $http, stripe) {\n  $scope.charge = function () {\n    return stripe.card.createToken($scope.payment.card)\n      .then(function (response) {\n        console.log('token created for card ending in ', response.card.last4);\n        var payment = angular.copy($scope.payment);\n        payment.card = void 0;\n        payment.token = response.id;\n        return $http.post('https://yourserver.com/payments', payment);\n      })\n      .then(function (payment) {\n        console.log('successfully submitted payment for $', payment.amount);\n      })\n      .catch(function (err) {\n        if (err.type && /^Stripe/.test(err.type)) {\n          console.log('Stripe error: ', err.message);\n        }\n        else {\n          console.log('Other error occurred, possibly with your API', err.message);\n        }\n      });\n  };\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/bendrucker/angular-stripe.git"
  },
  "scripts": {
    "preversion": "npm run umd && git add -A ./release/*",
    "test": "standard && zuul --phantom -- test/*.js",
    "umd": "browserify -e . -s angularStripe -g [ exposify --expose [ --angular=angular ] ] -p derequire/plugin > ./release/angular-stripe.js"
  },
  "standard": {
    "ignore": [
      "release/"
    ]
  },
  "version": "4.2.13"
}
